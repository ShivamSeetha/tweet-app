server.port=5000
spring.application.name=Tweet-App

#MongoDB
spring.data.mongodb.auto-index-creation: true
spring.data.mongodb.uri=mongodb+srv://root:root@cluster0.wru0nsu.mongodb.net/tweetapp1?retryWrites=true&w=majority

spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id= group_id
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer

logging.file.name=tweetapp-api.log 

spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always